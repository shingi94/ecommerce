[{"D:\\Documents\\ecommerce\\src\\App.js":"1","D:\\Documents\\ecommerce\\src\\components\\Products\\Products.jsx":"2","D:\\Documents\\ecommerce\\src\\components\\Products\\Product\\styles.js":"3","D:\\Documents\\ecommerce\\src\\components\\Products\\Product\\Product.jsx":"4","D:\\Documents\\ecommerce\\src\\components\\Navbar\\Navbar.jsx":"5","D:\\Documents\\ecommerce\\src\\components\\index.js":"6","D:\\Documents\\ecommerce\\src\\index.js":"7","D:\\Documents\\ecommerce\\src\\components\\Products\\styles.js":"8","D:\\Documents\\ecommerce\\src\\components\\Navbar\\styles.js":"9","D:\\Documents\\ecommerce\\src\\lib\\commerce.js":"10","D:\\Documents\\ecommerce\\src\\components\\Cart\\Cart.jsx":"11","D:\\Documents\\ecommerce\\src\\components\\Cart\\styles.js":"12","D:\\Documents\\ecommerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","D:\\Documents\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js":"14","D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\Review.jsx":"19","D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"20"},{"size":2799,"mtime":1612080583060,"results":"21","hashOfConfig":"22"},{"size":715,"mtime":1612080583077,"results":"23","hashOfConfig":"22"},{"size":416,"mtime":1612080583076,"results":"24","hashOfConfig":"22"},{"size":1275,"mtime":1612080583075,"results":"25","hashOfConfig":"22"},{"size":2179,"mtime":1612081125131,"results":"26","hashOfConfig":"22"},{"size":237,"mtime":1612080583078,"results":"27","hashOfConfig":"22"},{"size":152,"mtime":1611932229983,"results":"28","hashOfConfig":"22"},{"size":300,"mtime":1612080583077,"results":"29","hashOfConfig":"22"},{"size":1633,"mtime":1612080583074,"results":"30","hashOfConfig":"22"},{"size":128,"mtime":1612093219784,"results":"31","hashOfConfig":"22"},{"size":1809,"mtime":1612080583063,"results":"32","hashOfConfig":"22"},{"size":599,"mtime":1612080583066,"results":"33","hashOfConfig":"22"},{"size":1432,"mtime":1612080583064,"results":"34","hashOfConfig":"22"},{"size":351,"mtime":1612080583065,"results":"35","hashOfConfig":"22"},{"size":3677,"mtime":1612092549587,"results":"36","hashOfConfig":"22"},{"size":1210,"mtime":1612080583069,"results":"37","hashOfConfig":"22"},{"size":4697,"mtime":1612080583067,"results":"38","hashOfConfig":"22"},{"size":2498,"mtime":1612092376252,"results":"39","hashOfConfig":"22"},{"size":916,"mtime":1612080583071,"results":"40","hashOfConfig":"22"},{"size":557,"mtime":1612080583070,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1fqovfw",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"D:\\Documents\\ecommerce\\src\\App.js",[],["89","90"],"D:\\Documents\\ecommerce\\src\\components\\Products\\Products.jsx",[],["91","92"],"D:\\Documents\\ecommerce\\src\\components\\Products\\Product\\styles.js",[],"D:\\Documents\\ecommerce\\src\\components\\Products\\Product\\Product.jsx",[],"D:\\Documents\\ecommerce\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\Documents\\ecommerce\\src\\components\\index.js",[],"D:\\Documents\\ecommerce\\src\\index.js",[],["93","94"],"D:\\Documents\\ecommerce\\src\\components\\Products\\styles.js",[],["95","96"],"D:\\Documents\\ecommerce\\src\\components\\Navbar\\styles.js",[],["97","98"],"D:\\Documents\\ecommerce\\src\\lib\\commerce.js",[],"D:\\Documents\\ecommerce\\src\\components\\Cart\\Cart.jsx",[],"D:\\Documents\\ecommerce\\src\\components\\Cart\\styles.js",[],"D:\\Documents\\ecommerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"D:\\Documents\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js",[],"D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["99"],"import React, { useState, useEffect } from 'react';\r\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../../lib/commerce';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\nimport useStyles from './styles';\r\n\r\nconst steps = ['Shipping address', 'Payment details'];\r\n\r\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\r\n  const [checkoutToken, setCheckoutToken] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n  useEffect(() => {\r\n    if (cart.id) {\r\n      const generateToken = async () => {\r\n        try {\r\n          const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n\r\n          setCheckoutToken(token);\r\n        } catch (error) {\r\n          history.pushState('/');\r\n        }\r\n      };\r\n\r\n      generateToken();\r\n    }\r\n  }, [cart]);\r\n\r\n  const test = (data) => {\r\n    setShippingData(data);\r\n\r\n    nextStep();\r\n  }\r\n\r\n  const timeout = () =>{\r\n    setTimeout(()=>{\r\n      setIsFinished(true);\r\n    }, 3000);\r\n    \r\n  }\r\n\r\n  let Confirmation = () => (order.customer ? (\r\n    <>\r\n      <div>\r\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n        <Divider className={classes.divider} />\r\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n      </div>\r\n      <br />\r\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n    </>\r\n  ) : isFinished ? (\r\n    <>\r\n      <div>\r\n        <Typography variant=\"h5\">Thank you for your purchase!</Typography>\r\n        <Divider className={classes.divider} />\r\n        \r\n      </div>\r\n      <br />\r\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n    </>\r\n  ) : (\r\n    <div className={classes.spinner}>\r\n      <CircularProgress />\r\n    </div>\r\n  ));\r\n\r\n  if (error) {\r\n    Confirmation = () => (\r\n      <>\r\n        <Typography variant=\"h5\">Error: {error}</Typography>\r\n        <br />\r\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const Form = () => (activeStep === 0\r\n    ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test} />\r\n    : <PaymentForm checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} shippingData={shippingData} onCaptureCheckout={onCaptureCheckout} timeout={timeout}/>);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <div className={classes.toolbar} />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n        </Paper>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["100","101"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, test }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput required name=\"firstName\" label=\"First name\" />\r\n            <FormInput required name=\"lastName\" label=\"Last name\" />\r\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n            <FormInput required name=\"email\" label=\"Email\" />\r\n            <FormInput required name=\"city\" label=\"City\" />\r\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\Review.jsx",[],"D:\\Documents\\ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","replacedBy":"111"},{"ruleId":"102","replacedBy":"112"},{"ruleId":"104","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":37,"column":6,"nodeType":"116","endLine":37,"endColumn":12,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":41,"column":6,"nodeType":"116","endLine":41,"endColumn":8,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"120","line":49,"column":6,"nodeType":"116","endLine":49,"endColumn":27,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],["122"],["123"],["122"],["123"],["122"],["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [cart, history]",{"range":"133","text":"134"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"135","text":"136"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"137","text":"138"},[1344,1350],"[cart, history]",[1708,1710],"[checkoutToken.id]",[1961,1982],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]